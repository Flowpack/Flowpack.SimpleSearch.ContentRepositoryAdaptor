
'Neos.Neos:Node': &node
  properties:
    '__identifier':
      search:
        indexing: "${node.aggregateId}"

    '__workspace':
      search:
        indexing: "${'#' + node.workspaceName + '#'}"

    '__path':
      search:
        indexing: "${Indexing.aggregateIdPath(node)}"

    '__parentPath':
      search:
        indexing: "${'#' + Array.join(Array.pop(Indexing.buildAllPathPrefixes(Indexing.aggregateIdPath(node))), '#') + '#'}"

    '__type':
      search:
        indexing: "${node.nodeTypeName}"
    # we index the node type INCLUDING ALL SUPERTYPES
    '__typeAndSupertypes':
      search:
        indexing: "${'#' + Array.join(Indexing.extractNodeTypeNamesAndSupertypes(node), '#') + '#'}"
    '__dimensionshash':
      search:
        indexing: "${'#' + node.dimensionSpacePoint.hash + '#'}"

'unstructured': *node

'Neos.Neos:Hidable':
  properties:
    'neos_hidden':
      search:
        indexing: '${Neos.Node.isDisabled(node)}'

'Neos.NodeTypes:Text':
  search:
    fulltext:
      enable: true
  properties:
    text:
      search:
        fulltextExtractor: "${Indexing.extractHtmlTags(value)}"

'Neos.NodeTypes:Headline':
  search:
    fulltext:
      enable: true
  properties:
    title:
      search:
        fulltextExtractor: "${Indexing.extractHtmlTags(value)}"

'Neos.Neos:Document':
  search:
    fulltext:
      isRoot: true
      enable: true
  properties:
    title:
      search:
        fulltextExtractor: "${Indexing.extractHtmlTags(value)}"

'Flowpack.SimpleSearch.ContentRepositoryAdaptor:Search':
  superTypes:
    'Neos.Neos:Content': true
  ui:
    label: 'Search'
    icon: 'icon-search'
